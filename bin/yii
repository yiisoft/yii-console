#!/usr/bin/env php
<?php

use Psr\Container\ContainerInterface;
use Yiisoft\Composer\Config\Builder;
use Yiisoft\Yii\Console\Application;
use Yiisoft\Yii\Console\Config\EventConfigurator;
use Yiisoft\Yii\Console\Output\ConsoleBufferedOutput;

(static function () {
    $cwd = getcwd();

    $possibleAutoloadPaths = [
        // running from project root
        $cwd . '/vendor/autoload.php',
        // running from project bin
        dirname($cwd) . '/autoload.php',
        // local dev repository
        dirname(__DIR__) . '/vendor/autoload.php',
        // dependency
        dirname(__DIR__, 4) . '/vendor/autoload.php',
    ];
    $autoloadPath = null;
    foreach ($possibleAutoloadPaths as $possibleAutoloadPath) {
        if (file_exists($possibleAutoloadPath)) {
            $autoloadPath = $possibleAutoloadPath;
            break;
        }
    }

    if ($autoloadPath === null) {
        $message = "Unable to find vendor/autoload.php in the following paths:\n\n";
        $message .= '- ' . implode("\n- ", $possibleAutoloadPaths) . "\n\n";
        $message .= "Possible fixes:\n";
        $message .= "- Install yiisoft/console via Composer.\n";
        $message .= "- Run ./yii either from project root or from vendor/bin.\n";
        fwrite(STDERR, $message);
        exit(1);
    }
    require_once $autoloadPath;

    $params = require Builder::path('params');

    /** @var ContainerInterface $container */
    $container = $params['console']['container']();
    $eventConfigurator = $container->get(EventConfigurator::class);
    $eventConfigurator->registerListeners(require Builder::path('events-console'));

    $application = $container->get(Application::class);
    $exitCode = 1;

    try {
        $application->start();
        $exitCode = $application->run(null, new ConsoleBufferedOutput());
    } finally {
        $application->shutdown($exitCode);
        exit($exitCode);
    }
})();
